{
    "workbench.colorCustomizations": {
        "[Quiet Light]": {
            "foreground": "#000000",
            "badge.foreground": "#000000",
            "badge.background": "#d7c8e6",
            "breadcrumb.foreground": "#2b2a2a",
            "tab.activeBackground": "#e6fd73",
            "tab.activeForeground": "#550101",
            "tab.activeBorder": "#0000ff",
            "tab.inactiveForeground": "#570101",
            "tab.border": "#7f8b35b7",
            "tab.hoverBorder": "#2f00ff",
            "editorHoverWidget.border": "#1D76EA",
            "list.filterMatchBackground": "#dbd86a",
            "list.warningForeground": "#000000ff",
            "gitDecoration.untrackedResourceForeground": "#000000",
            "sideBar.foreground": "#000000",
            "editor.foreground": "#000000",
            "editorLineNumber.foreground": "#444444",
            "editorLineNumber.activeForeground": "#ff3bf2",
            "editorCursor.foreground": "#000000",
            "minimap.selectionHighlight": "#0000ff",
            "editorBracketMatch.border": "#7b8200",
            "list.errorForeground": "#000000"
        },
        "gitDecoration.modifiedResourceForeground": "#7d5903",
        "toolbar.hoverOutline": "#ff00ff",
        "inputOption.activeBorder": "#ff00ff",
        "icon.foreground": "#ff05d1",
        "editor.selectionHighlightBackground": "#fab08549",
        "editor.selectionBackground": "#504ec7",
        "editor.findMatchBackground": "#ed4cb76f",
        "editor.findMatchBorder": "#f828ff",
        "editor.findMatchHighlightBackground": "#ffc19d"
    },
        // "editor.fontFamily": "'Source Code Pro', 'DejaVu Sans Mono',  'Droid Sans Mono', 'monospace', monospace",
        "editor.renderWhitespace": "all",
        "editor.wordWrap": "on",
        "editor.definitionLinkOpensInPeek": true,
        "editor.foldingMaximumRegions": 1000,
        "editor.maxTokenizationLineLength": 1000,
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "files.autoSave": "onWindowChange",
        "files.trimFinalNewlines": true,
        "files.trimTrailingWhitespace": true,
        // "hides" files from the Explorer
        "files.exclude": {
            ".git/": true,
            ".vscode/*": false,
            "**/*env": true,
            "**/*venv": true,
            "**/.*_cache*": true,
            "**/__pycache__": true,
        },
        // and doesn't search in them (inherits `files.exclude`)
        "search.exclude": {},
        // and exclude them from the File Watcher
        "files.watcherExclude": {
            "**/.git/objects/**": true,
            "**/.git/subtree-cache/**": true,
            ".vscode/*": true,
            "**/*env": true,
            "**/*venv": true,
            "**/.*_cache*": true,
            "**/__pycache__": true,
        },
        // Python
        "python.analysis.completeFunctionParens": true,
        "python.analysis.inlayHints.functionReturnTypes": true,
        "python.analysis.inlayHints.variableTypes": true,
        "python.analysis.typeCheckingMode": "basic",
        "python.analysis.inlayHints.pytestParameters": true,
        "python.analysis.userFileIndexingLimit": 40,
        "python.analysis.exclude": [
            "**/__pycache__",
            "**/node_modules/",
            "**/.git/",
            "**/.*_cache",
            "**/.vscode/",
            "**/*env/",
            "**/*venv/"
        ],
        "python.createEnvironment.trigger": "prompt",
        "python.languageServer": "Pylance",
        "python.terminal.activateEnvInCurrentTerminal": true,
        "python.testing.pytestEnabled": true,
        "python.testing.cwd": "${workspaceFolder}/tests",
        "python.testing.unittestEnabled": true,
        //pylint
        "pylint.importStrategy": "fromEnvironment",
        // mypy
        "mypy-type-checker.importStrategy": "fromEnvironment",
        // flake8
        "flake8.importStrategy": "fromEnvironment",
}
